{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/job.form.js\";\nimport React from 'react';\nimport Input from './generalComponents/input.component';\nimport Button from './generalComponents/button.component';\nimport Label from './generalComponents/label';\nimport { jobAction } from '../redux/addJob/jobActions';\nimport Select from 'react-select';\nimport { userActions } from '../redux/user/userActions';\n\nclass JobForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.user = JSON.parse(localStorage.getItem('currentUser'));\n\n    this.handleUserInput = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n\n      if (name === 'photo') {\n        this.setState({\n          file: event.target.files[0]\n        });\n      }\n    };\n\n    this.handleChangeComp = selectedOption => {\n      const name = 'company';\n      let value = '';\n\n      try {\n        value = selectedOption.value;\n      } catch (error) {\n        console.log(error.message);\n      }\n\n      this.setState({\n        company: selectedOption\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.addJob = event => {\n      event.preventDefault();\n      let company = '';\n\n      if (this.user.role === 0) {\n        company = this.state.company.value;\n      } else {\n        company = this.user.name;\n      }\n\n      const _this$state = this.state,\n            profile = _this$state.profile,\n            designation = _this$state.designation,\n            salary = _this$state.salary,\n            city = _this$state.city;\n      const data = new FormData();\n      data.append('filename', company);\n      data.append('file', this.state.file);\n      const dispatch = this.props.dispatch;\n\n      if (company && profile && designation && salary && city && data) {\n        dispatch(jobAction.addJob(company, profile, designation, salary, city, data));\n      }\n\n      setTimeout(() => {\n        document.getElementById('addjob').style.display = 'block';\n      }, 1000);\n    };\n\n    this.state = {\n      file: [],\n      uploadStatus: '',\n      profile: '',\n      designation: '',\n      company: '',\n      salary: '',\n      city: '',\n      photo: '',\n      optionsComp: [],\n      formErrors: {\n        profile: '',\n        designation: '',\n        salary: '',\n        city: '',\n        photo: '',\n        company: ''\n      },\n      profileValid: false,\n      designationValid: false,\n      salaryValid: false,\n      jobValid: '',\n      cityValid: false,\n      companyValid: false,\n      addJobValid: false,\n      photoValid: false\n    };\n    const _dispatch = this.props.dispatch;\n\n    _dispatch(userActions.getAllUsers());\n  }\n\n  componentDidMount() {\n    try {\n      setTimeout(() => {\n        document.getElementById('addjob').style.display = 'none';\n      }, 1000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('addjob').style.display = 'block';\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    try {\n      const users = props.users;\n      var compList = [];\n      users.filter(item => {\n        if (item.role === 1) {\n          return compList.push(item.name);\n        }\n\n        return false;\n      });\n      const optionsComp = compList.map(item => {\n        return {\n          'label': item,\n          'value': item\n        };\n      });\n      this.setState({\n        optionsComp: optionsComp\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let profileValid = this.state.profileValid;\n    let designationValid = this.state.designationValid;\n    let salaryValid = this.state.salaryValid;\n    let cityValid = this.state.cityValid;\n    let photoValid = this.state.photoValid;\n    let companyValid = this.state.companyValid;\n\n    switch (fieldName) {\n      case 'profile':\n        profileValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.profile = profileValid ? '' : ' is invalid';\n        break;\n\n      case 'designation':\n        designationValid = value.match(/^[a-z.][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.designation = designationValid ? '' : ' is invalid';\n        break;\n\n      case 'salary':\n        salaryValid = value.match(/^[0-9]+( [a-zA-Z]+)*$/);\n        fieldValidationErrors.salary = salaryValid ? '' : 'must be valid';\n        break;\n\n      case 'city':\n        cityValid = value.match(/^[a-z][^!¡?÷?¿\\\\+=@#$%ˆ&*{}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.city = cityValid ? '' : 'can be a comb. of a-zA-Z0-9.,-_()';\n        break;\n\n      case 'photo':\n        if (value.match(/\\.[0-9a-z]+$/i)[0] === '.jpg') {\n          photoValid = true;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        } else if (value.match(/\\.[0-9a-z]+$/i)[0] === '.png') {\n          photoValid = true;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        } else {\n          photoValid = null;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        }\n\n        break;\n\n      case 'company':\n        companyValid = !!this.state.company;\n        fieldValidationErrors.company = companyValid ? '' : 'select one';\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.user.role === 1) {\n      this.setState({\n        formErrors: fieldValidationErrors,\n        profileValid: profileValid,\n        photoValid: photoValid,\n        designationValid: designationValid,\n        salaryValid: salaryValid,\n        cityValid: cityValid,\n        companyValid: true\n      }, this.validateForm);\n    } else {\n      this.setState({\n        formErrors: fieldValidationErrors,\n        profileValid: profileValid,\n        photoValid: photoValid,\n        designationValid: designationValid,\n        salaryValid: salaryValid,\n        cityValid: cityValid,\n        companyValid: companyValid\n      }, this.validateForm);\n    }\n  }\n\n  validateForm() {\n    this.setState({\n      addJobValid: this.state.companyValid && this.state.profileValid && this.state.designationValid && this.state.salaryValid && this.state.cityValid && this.state.photoValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    if (this.user.role === 2) {\n      this.props.history.push('/');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      id: \"addJob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Add New Job\"), React.createElement(\"form\", {\n      onSubmit: this.addJob,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.user.role === 0 && React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.profile)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'company',\n      title: 'Company',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.state.optionsComp,\n      value: this.state.company,\n      onChange: this.handleChangeComp,\n      placeholder: \"Choose company\",\n      isClearable: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.company) && React.createElement(\"span\", {\n      className: \"nameright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Please select one.\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.profile)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'profile',\n      title: 'Profile',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'profile',\n      input_type: 'text',\n      name: 'profile',\n      value: this.state.profile,\n      placeholder: \"IT Service/Sales/Tester\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.profile) && React.createElement(\"span\", {\n      className: \"nameright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Profile name must be valid\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.designation)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'designation',\n      title: 'Designation',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'designation',\n      input_type: 'text',\n      name: 'designation',\n      value: this.state.designation,\n      placeholder: \"Software Engineer\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.designation) && React.createElement(\"span\", {\n      className: \"emailright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Invalid designation\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.salary)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'salary',\n      title: 'Salary',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'salary',\n      input_type: 'text',\n      name: 'salary',\n      value: this.state.salary,\n      placeholder: \"7 LPA\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.salary) && React.createElement(\"span\", {\n      className: \"pswderrright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Invalid Salary\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.city)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'city',\n      title: 'City',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'city',\n      input_type: 'text',\n      name: 'city',\n      value: this.state.city,\n      placeholder: \"Delhi\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.city) && React.createElement(\"span\", {\n      className: \"phoneright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"City name must be only in a-zA-Z_-0-9()\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.city)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-3 col-form-label',\n      htmlFor: 'photo',\n      title: 'Job Photo',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'photo',\n      input_type: 'file',\n      name: 'photo',\n      value: this.state.photo,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.photo) && React.createElement(\"span\", {\n      className: \"phoneright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Photo not valid only .jpg and .png\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Button, {\n      title: 'Add',\n      action: 'submit',\n      className: \"btn btn-success\",\n      disabled: this.state.addJobValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default JobForm;","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/job.form.js"],"names":["React","Input","Button","Label","jobAction","Select","userActions","JobForm","Component","constructor","props","user","JSON","parse","localStorage","getItem","handleUserInput","event","name","target","value","setState","validateField","file","files","handleChangeComp","selectedOption","error","console","log","message","company","addJob","preventDefault","role","state","profile","designation","salary","city","data","FormData","append","dispatch","setTimeout","document","getElementById","style","display","uploadStatus","photo","optionsComp","formErrors","profileValid","designationValid","salaryValid","jobValid","cityValid","companyValid","addJobValid","photoValid","getAllUsers","componentDidMount","componentWillUnmount","componentWillReceiveProps","users","compList","filter","item","push","map","fieldName","fieldValidationErrors","match","validateForm","errorClass","length","render","history"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './generalComponents/input.component'\nimport Button from './generalComponents/button.component'\nimport Label from './generalComponents/label'\nimport { jobAction } from '../redux/addJob/jobActions';\nimport Select from 'react-select';\nimport { userActions } from '../redux/user/userActions';\n\nclass JobForm extends React.Component {\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  constructor(props) {\n    super(props)\n    this.state = {\n      file: [],\n      uploadStatus: '',\n      profile: '',\n      designation: '',\n      company: '',\n      salary: '',\n      city: '',\n      photo: '',\n      optionsComp: [],\n      formErrors: { profile: '', designation: '', salary: '', city: '', photo: '', company: '' },\n      profileValid: false,\n      designationValid: false,\n      salaryValid: false,\n      jobValid: '',\n      cityValid: false,\n      companyValid: false,\n      addJobValid: false,\n      photoValid: false\n    }\n    const { dispatch } = this.props;\n    dispatch(userActions.getAllUsers());\n  }\n\n  componentDidMount() {\n    try {\n      setTimeout(() => {\n        document.getElementById('addjob').style.display = 'none';\n      }, 1000)\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('addjob').style.display = 'block';\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    try {\n      const { users } = props;\n      var compList = [];\n      users.filter((item) => {\n        if (item.role === 1) {\n          return (compList.push(item.name))\n        }\n        return false;\n      })\n      const optionsComp = compList.map((item) => {\n        return { 'label': item, 'value': item }\n      })\n      this.setState({\n        optionsComp: optionsComp\n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n  handleUserInput = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n    if (name === 'photo') {\n      this.setState({\n        file: event.target.files[0]\n      })\n    }\n  }\n\n  handleChangeComp = (selectedOption) => {\n    const name = 'company'\n    let value = '';\n    try {\n      value = selectedOption.value;\n    } catch (error) {\n      console.log(error.message)\n    }\n    this.setState({\n      company: selectedOption\n    }, () => {\n      this.validateField(name, value)\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let profileValid = this.state.profileValid;\n    let designationValid = this.state.designationValid;\n    let salaryValid = this.state.salaryValid;\n    let cityValid = this.state.cityValid;\n    let photoValid = this.state.photoValid;\n    let companyValid = this.state.companyValid;\n\n    switch (fieldName) {\n      case 'profile':\n        profileValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.profile = profileValid ? '' : ' is invalid';\n        break;\n      case 'designation':\n        designationValid = value.match(/^[a-z.][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.designation = designationValid ? '' : ' is invalid';\n        break;\n      case 'salary':\n        salaryValid = value.match(/^[0-9]+( [a-zA-Z]+)*$/);\n        fieldValidationErrors.salary = salaryValid ? '' : 'must be valid'\n        break;\n      case 'city':\n        cityValid = value.match(/^[a-z][^!¡?÷?¿\\\\+=@#$%ˆ&*{}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.city = cityValid ? '' : 'can be a comb. of a-zA-Z0-9.,-_()'\n        break;\n      case 'photo':\n        if (value.match(/\\.[0-9a-z]+$/i)[0] === '.jpg') {\n          photoValid = true;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        } else if (value.match(/\\.[0-9a-z]+$/i)[0] === '.png') {\n          photoValid = true;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        } else {\n          photoValid = null;\n          fieldValidationErrors.photo = photoValid ? '' : ' is invalid';\n        }\n        break;\n      case 'company':\n        companyValid = !!this.state.company;\n        fieldValidationErrors.company = companyValid ? '' : 'select one'\n        break;\n      default:\n        break;\n    }\n\n    if (this.user.role === 1) {\n      this.setState({\n        formErrors: fieldValidationErrors,\n        profileValid: profileValid,\n        photoValid: photoValid,\n        designationValid: designationValid,\n        salaryValid: salaryValid,\n        cityValid: cityValid,\n        companyValid: true\n      }, this.validateForm);\n    } else {\n      this.setState({\n        formErrors: fieldValidationErrors,\n        profileValid: profileValid,\n        photoValid: photoValid,\n        designationValid: designationValid,\n        salaryValid: salaryValid,\n        cityValid: cityValid,\n        companyValid: companyValid\n      }, this.validateForm);\n    }\n  }\n\n  validateForm() {\n    this.setState({\n      addJobValid: this.state.companyValid && this.state.profileValid && this.state.designationValid && this.state.salaryValid && this.state.cityValid && this.state.photoValid\n    });\n  }\n\n  errorClass(error) {\n    return (error.length === 0 ? '' : 'has-error');\n  }\n\n  addJob = (event) => {\n    event.preventDefault();\n    let company = '';\n    if (this.user.role === 0) {\n      company = this.state.company.value;\n    } else {\n      company = this.user.name;\n    }\n    const { profile, designation, salary, city } = this.state;\n    const data = new FormData();\n    data.append('filename', company)\n    data.append('file', this.state.file);\n    const { dispatch } = this.props\n    if (company && profile && designation && salary && city && data) {\n      dispatch(jobAction.addJob(company, profile, designation, salary, city, data))\n    }\n    setTimeout(() => {\n      document.getElementById('addjob').style.display = 'block';\n    }, 1000)\n  }\n\n  render() {\n    if (this.user.role === 2) {\n      this.props.history.push('/')\n    }\n\n    return (\n      <div className=\"col-md-4 col-md-offset-4\" id=\"addJob\">\n        <h1 className=\"underline\">Add New Job</h1>\n        <form onSubmit={this.addJob} method=\"POST\">\n          {this.user.role === 0 && <div className={`form-group row ${this.errorClass(this.state.formErrors.profile)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'company'}\n              title={'Company'}\n            />\n            <div className=\"col-sm-9\">\n              <Select options={this.state.optionsComp} value={this.state.company} onChange={this.handleChangeComp} placeholder=\"Choose company\" isClearable={true} required />\n              {this.errorClass(this.state.formErrors.company) && <span className=\"nameright formErrors\">Please select one.</span>}\n            </div>\n          </div>}\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.profile)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'profile'}\n              title={'Profile'}\n            />\n            <div className=\"col-sm-9\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'profile'}\n                input_type={'text'}\n                name={'profile'}\n                value={this.state.profile}\n                placeholder=\"IT Service/Sales/Tester\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.profile) && <span className=\"nameright formErrors\">Profile name must be valid</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.designation)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'designation'}\n              title={'Designation'}\n            />\n            <div className=\"col-sm-9\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'designation'}\n                input_type={'text'}\n                name={'designation'}\n                value={this.state.designation}\n                placeholder=\"Software Engineer\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.designation) && <span className=\"emailright formErrors\">Invalid designation</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.salary)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'salary'}\n              title={'Salary'}\n            />\n            <div className=\"col-sm-9\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'salary'}\n                input_type={'text'}\n                name={'salary'}\n                value={this.state.salary}\n                placeholder=\"7 LPA\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.salary) && <span className=\"pswderrright formErrors\">Invalid Salary</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.city)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'city'}\n              title={'City'}\n            />\n            <div className=\"col-sm-9\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'city'}\n                input_type={'text'}\n                name={'city'}\n                value={this.state.city}\n                placeholder=\"Delhi\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.city) && <span className=\"phoneright formErrors\">City name must be only in a-zA-Z_-0-9()</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.city)}`}>\n            <Label\n              className={'col-sm-3 col-form-label'}\n              htmlFor={'photo'}\n              title={'Job Photo'}\n            />\n            <div className=\"col-sm-9\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'photo'}\n                input_type={'file'}\n                name={'photo'}\n                value={this.state.photo}\n                required\n              />\n              {this.errorClass(this.state.formErrors.photo) && <span className=\"phoneright formErrors\">Photo not valid only .jpg and .png</span>}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-9\">\n              <Button\n                title={'Add'}\n                action={'submit'}\n                className=\"btn btn-success\"\n                disabled={this.state.addJobValid}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default JobForm;"]},"metadata":{},"sourceType":"module"}