{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/generalComponents/privateRoute.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport isLoggedIn from '../../isLoggedIn';\nexport default function PrivateRoute(Component) {\n  class AuthenticatedComponent extends React.Component {\n    componentWillMount() {\n      this.checkAuth();\n    }\n\n    checkAuth() {\n      if (!isLoggedIn()) {\n        this.props.history.push('/login');\n      }\n    }\n\n    render() {\n      return isLoggedIn() ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })) : null;\n    }\n\n  }\n\n  return withRouter(AuthenticatedComponent);\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/generalComponents/privateRoute.js"],"names":["React","withRouter","isLoggedIn","PrivateRoute","Component","AuthenticatedComponent","componentWillMount","checkAuth","props","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC9C,QAAMC,sBAAN,SAAqCL,KAAK,CAACI,SAA3C,CAAqD;AACnDE,IAAAA,kBAAkB,GAAG;AACnB,WAAKC,SAAL;AACD;;AAEDA,IAAAA,SAAS,GAAG;AACV,UAAI,CAACL,UAAU,EAAf,EAAmB;AACjB,aAAKM,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AAEDC,IAAAA,MAAM,GAAG;AACP,aAAOT,UAAU,KAAK,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAL,GAAqC,IAAtD;AACD;;AAbkD;;AAgBrD,SAAOP,UAAU,CAACI,sBAAD,CAAjB;AACD","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\nimport isLoggedIn from '../../isLoggedIn';\n\nexport default function PrivateRoute(Component) {\n  class AuthenticatedComponent extends React.Component {\n    componentWillMount() {\n      this.checkAuth();\n    }\n\n    checkAuth() {\n      if (!isLoggedIn()) {\n        this.props.history.push('/login');\n      }\n    }\n\n    render() {\n      return isLoggedIn() ? <Component {...this.props} /> : null;\n    }\n\n  }\n  return withRouter(AuthenticatedComponent);\n}"]},"metadata":{},"sourceType":"module"}