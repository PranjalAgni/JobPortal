{"ast":null,"code":"import { bodyService } from './bodyService';\nimport { bodyConstants } from './bodyConstants';\nimport { history } from '../../_helpers/history';\nimport { alertActions } from '../alert/alertActions';\nimport { jobService } from '../addJob/jobService';\nexport const bodyActions = {\n  getJobs\n};\n\nfunction getJobs(page, last) {\n  return dispatch => {\n    dispatch(request(page));\n    bodyService.getJobs(page, last).then(jobs => {\n      jobService.getMails();\n\n      if (jobs === false) {\n        dispatch(alertActions.error(jobs));\n      } else {\n        dispatch(success(jobs));\n        history.push('/');\n      }\n    }).catch(error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: bodyConstants.JOBS_REQUEST\n    };\n  }\n\n  function success(jobs) {\n    return {\n      type: bodyConstants.JOBS_SUCCESS,\n      jobs\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: bodyConstants.JOBS_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/redux/body/bodyActions.js"],"names":["bodyService","bodyConstants","history","alertActions","jobService","bodyActions","getJobs","page","last","dispatch","request","then","jobs","getMails","error","success","push","catch","failure","message","type","JOBS_REQUEST","JOBS_SUCCESS","JOBS_FAILURE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA;AADuB,CAApB;;AAIP,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,CAACH,IAAD,CAAR,CAAR;AACAP,IAAAA,WAAW,CAACM,OAAZ,CAAoBC,IAApB,EAA0BC,IAA1B,EACKG,IADL,CACWC,IAAD,IAAU;AACZR,MAAAA,UAAU,CAACS,QAAX;;AACA,UAAID,IAAI,KAAK,KAAb,EAAoB;AAChBH,QAAAA,QAAQ,CAACN,YAAY,CAACW,KAAb,CAAmBF,IAAnB,CAAD,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,CAACM,OAAO,CAACH,IAAD,CAAR,CAAR;AACAV,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH;AACJ,KATL,EAUKC,KAVL,CAUYH,KAAD,IAAW;AACdL,MAAAA,QAAQ,CAACS,OAAO,CAACJ,KAAD,CAAR,CAAR;AACAL,MAAAA,QAAQ,CAACN,YAAY,CAACW,KAAb,CAAmBA,KAAK,CAACK,OAAzB,CAAD,CAAR;AACH,KAbL;AAcH,GAhBD;;AAkBA,WAAST,OAAT,GAAmB;AAAE,WAAO;AAAEU,MAAAA,IAAI,EAAEnB,aAAa,CAACoB;AAAtB,KAAP;AAA6C;;AAClE,WAASN,OAAT,CAAiBH,IAAjB,EAAuB;AAAE,WAAO;AAAEQ,MAAAA,IAAI,EAAEnB,aAAa,CAACqB,YAAtB;AAAoCV,MAAAA;AAApC,KAAP;AAAmD;;AAC5E,WAASM,OAAT,CAAiBJ,KAAjB,EAAwB;AAAE,WAAO;AAAEM,MAAAA,IAAI,EAAEnB,aAAa,CAACsB,YAAtB;AAAoCT,MAAAA;AAApC,KAAP;AAAoD;AACjF","sourcesContent":["import { bodyService } from './bodyService'\nimport { bodyConstants } from './bodyConstants'\nimport { history } from '../../_helpers/history'\nimport { alertActions } from '../alert/alertActions'\nimport { jobService } from '../addJob/jobService'\n\nexport const bodyActions = {\n    getJobs\n};\n\nfunction getJobs(page, last) {\n    return dispatch => {\n        dispatch(request(page));\n        bodyService.getJobs(page, last)\n            .then((jobs) => {\n                jobService.getMails()\n                if (jobs === false) {\n                    dispatch(alertActions.error(jobs))\n                } else {\n                    dispatch(success(jobs));\n                    history.push('/');\n                }\n            })\n            .catch((error) => {\n                dispatch(failure(error));\n                dispatch(alertActions.error(error.message));\n            })\n    };\n\n    function request() { return { type: bodyConstants.JOBS_REQUEST } }\n    function success(jobs) { return { type: bodyConstants.JOBS_SUCCESS, jobs } }\n    function failure(error) { return { type: bodyConstants.JOBS_FAILURE, error } }\n}"]},"metadata":{},"sourceType":"module"}