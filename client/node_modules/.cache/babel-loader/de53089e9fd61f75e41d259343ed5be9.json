{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/login.component.js\";\nimport React from 'react';\nimport { userActions } from '../redux/user/userActions';\nimport isLoggedIn from '../isLoggedIn';\nimport { Link } from 'react-router-dom';\nimport Input from './generalComponents/input.component';\nimport Button from './generalComponents/button.component';\nimport Label from './generalComponents/label';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props); // //Resets login status\n    // this.props.dispatch(userActions.logout());\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.login = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const dispatch = this.props.dispatch;\n\n      if (email && password) {\n        dispatch(userActions.login(email, password));\n      }\n    };\n\n    this.showHidePassword = e => {\n      e.preventDefault();\n\n      if (document.getElementById('password').type === 'password') {\n        this.setState({\n          pswdClass: 'fa fa-eye',\n          pswdType: !this.state.pswdType\n        });\n      } else {\n        this.setState({\n          pswdClass: 'fa fa-eye-slash',\n          pswdType: !this.state.pswdType\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        Email: '',\n        Password: ''\n      },\n      checkUserValid: '',\n      emailValid: false,\n      passwordValid: false,\n      signinValid: false,\n      pswdType: true,\n      pswdClass: 'fa fa-eye-slash'\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      document.getElementById('login').style.display = 'none';\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('login').style.display = 'block';\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.Email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 8 && value.match(/^(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n        fieldValidationErrors.Password = passwordValid ? '' : ' is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      signinValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    if (isLoggedIn()) {\n      this.props.history.push('/');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      onSubmit: this.login,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Email)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'email',\n      title: 'Email',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'email',\n      input_type: 'text',\n      name: 'email',\n      value: this.state.email,\n      placeholder: \"@\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Password)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'password',\n      title: 'Password',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'password',\n      input_type: this.state.pswdType ? 'password' : 'text',\n      name: 'password',\n      value: this.state.password,\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-addon\",\n      onClick: this.showHidePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.state.pswdClass,\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Button, {\n      title: 'Login',\n      action: 'submit',\n      className: \"btn btn-primary\",\n      disabled: this.state.signinValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/register\",\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Register\")))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/login.component.js"],"names":["React","userActions","isLoggedIn","Link","Input","Button","Label","Login","Component","constructor","props","handleUserInput","e","name","target","value","setState","validateField","login","event","preventDefault","state","email","password","dispatch","showHidePassword","document","getElementById","type","pswdClass","pswdType","formErrors","Email","Password","checkUserValid","emailValid","passwordValid","signinValid","componentDidMount","setTimeout","style","display","componentWillUnmount","error","console","log","message","fieldName","fieldValidationErrors","match","length","validateForm","errorClass","render","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { userActions } from '../redux/user/userActions'\nimport isLoggedIn from '../isLoggedIn'\nimport { Link } from 'react-router-dom'\nimport Input from './generalComponents/input.component'\nimport Button from './generalComponents/button.component'\nimport Label from './generalComponents/label';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    // //Resets login status\n    // this.props.dispatch(userActions.logout());\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: { Email: '', Password: '' },\n      checkUserValid: '',\n      emailValid: false,\n      passwordValid: false,\n      signinValid: false,\n      pswdType: true,\n      pswdClass: 'fa fa-eye-slash'\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      document.getElementById('login').style.display = 'none';\n    }, 0)\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('login').style.display = 'block';\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.Email = emailValid ? '' : ' is invalid';\n        break;\n      case 'password':\n        passwordValid = value.length >= 8 && value.match(/^(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n        fieldValidationErrors.Password = passwordValid ? '' : ' is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character';\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      signinValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return (error.length === 0 ? '' : 'has-error');\n  }\n\n  login = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const { dispatch } = this.props;\n    if (email && password) {\n      dispatch(userActions.login(email, password));\n    }\n  }\n\n  showHidePassword = (e) => {\n    e.preventDefault();\n    if (document.getElementById('password').type === 'password') {\n      this.setState({\n        pswdClass: 'fa fa-eye',\n        pswdType: !this.state.pswdType\n      })\n    } else {\n      this.setState({\n        pswdClass: 'fa fa-eye-slash',\n        pswdType: !this.state.pswdType\n      })\n    }\n  }\n  render() {\n    if (isLoggedIn()) {\n      this.props.history.push('/');\n    }\n    return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-sm-12\">\n          <div className=\"col-md-4 col-md-offset-4\">\n            <h1>Login</h1>\n            <form onSubmit={this.login} method=\"POST\">\n              <div className={`form-group row ${this.errorClass(this.state.formErrors.Email)}`}>\n                <Label\n                  className={'col-sm-2 col-form-label'}\n                  htmlFor={'email'}\n                  title={'Email'}\n                />\n                <div className=\"col-sm-10\">\n                  <Input\n                    onChange={this.handleUserInput}\n                    className={'form-control'}\n                    id={'email'}\n                    input_type={'text'}\n                    name={'email'}\n                    value={this.state.email}\n                    placeholder=\"@\"\n                    required\n                  />\n                  <div><small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small></div>\n                </div>\n              </div>\n              <div className={`form-group row ${this.errorClass(this.state.formErrors.Password)}`}>\n                <Label\n                  className={'col-sm-2 col-form-label'}\n                  htmlFor={'password'}\n                  title={'Password'}\n                />\n                <div className=\"input-group col-sm-10\">\n                  <Input\n                    onChange={this.handleUserInput}\n                    className={'form-control'}\n                    id={'password'}\n                    input_type={this.state.pswdType ? 'password' : 'text'}\n                    name={'password'}\n                    value={this.state.password}\n                    placeholder=\"Password\"\n                    required\n                  />\n                  <div className=\"input-group-addon\" onClick={this.showHidePassword}>\n                    <i className={this.state.pswdClass} aria-hidden=\"true\"></i>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-sm-10\">\n                  <Button\n                    title={'Login'}\n                    action={'submit'}\n                    className=\"btn btn-primary\"\n                    disabled={this.state.signinValid}\n                  />\n                  <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}