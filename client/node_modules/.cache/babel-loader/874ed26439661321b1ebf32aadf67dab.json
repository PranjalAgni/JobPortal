{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/signup.components.js\";\nimport React from 'react';\nimport Input from './generalComponents/input.component';\nimport Button from './generalComponents/button.component';\nimport isLoggedIn from '../isLoggedIn';\nimport { userActions } from '../redux/user/userActions';\nimport { alertActions } from '../redux/alert/alertActions';\nimport { Link } from 'react-router-dom';\nimport Label from './generalComponents/label';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.register = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            fullname = _this$state.fullname,\n            email = _this$state.email,\n            password = _this$state.password,\n            phone = _this$state.phone,\n            gender = _this$state.gender;\n      const dispatch = this.props.dispatch;\n\n      if (navigator.onLine) {\n        dispatch(userActions.register(fullname, email, password, phone, gender));\n      } else {\n        dispatch(alertActions.error('Network Down. Form will be auto submitted once online!'));\n      }\n    };\n\n    this.showHidePassword = e => {\n      e.preventDefault();\n\n      if (document.getElementById('password').type === 'password') {\n        this.setState({\n          pswdClass: 'fa fa-eye',\n          pswdType: !this.state.pswdType\n        });\n      } else {\n        this.setState({\n          pswdClass: 'fa fa-eye-slash',\n          pswdType: !this.state.pswdType\n        });\n      }\n    };\n\n    this.state = {\n      fullname: '',\n      email: '',\n      password: '',\n      phone: '',\n      gender: '',\n      formErrors: {\n        Email: '',\n        Password: '',\n        Phone: '',\n        Fullname: '',\n        Gender: ''\n      },\n      emailValid: false,\n      userExists: '',\n      passwordValid: false,\n      nameValid: false,\n      phoneValid: false,\n      genderValid: false,\n      signupValid: false,\n      pswdType: true,\n      pswdClass: 'fa fa-eye-slash'\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('online', event => {\n      this.register(event);\n    });\n    setTimeout(() => {\n      document.getElementById('register').style.display = 'none';\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('register').style.display = 'block';\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    let nameValid = this.state.nameValid;\n    let genderValid = this.state.genderValid;\n    let phoneValid = this.state.phoneValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.Email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 8 && value.match(/^(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n        fieldValidationErrors.Password = passwordValid ? '' : ' is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character';\n        break;\n\n      case 'fullname':\n        nameValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.Fullname = nameValid ? '' : 'must contain only alphabets';\n        break;\n\n      case 'phone':\n        phoneValid = value.length === 10 && value.match(/^[0-9]+$/);\n        fieldValidationErrors.Phone = phoneValid ? '' : 'must be only numbers and 10 digits only';\n        break;\n\n      case 'gender':\n        genderValid = !!this.state.gender;\n        fieldValidationErrors.Gender = genderValid ? '' : 'please select one';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      genderValid: genderValid,\n      passwordValid: passwordValid,\n      nameValid: nameValid,\n      phoneValid: phoneValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      signupValid: this.state.emailValid && this.state.genderValid && this.state.passwordValid && this.state.nameValid && this.state.phoneValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    if (isLoggedIn()) {\n      this.props.history.push('/');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"form\", {\n      onSubmit: this.register,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Fullname)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'fullname',\n      title: 'Fullname',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      input_type: 'text',\n      name: 'fullname',\n      id: 'fullname',\n      value: this.state.fullname,\n      placeholder: \"Enter fullname\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.Fullname) && React.createElement(\"span\", {\n      className: \"formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Name must be only in alphabets\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Email)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'email',\n      title: 'Email',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'email',\n      input_type: 'text',\n      name: 'email',\n      value: this.state.email,\n      placeholder: \"@\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), this.errorClass(this.state.formErrors.Email) && React.createElement(\"span\", {\n      className: \"formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Email should be a valid email address e.g., example@domain.com\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Password)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'password',\n      title: 'Password',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'password',\n      input_type: this.state.pswdType ? 'password' : 'text',\n      name: 'password',\n      value: this.state.password,\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-addon\",\n      onClick: this.showHidePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.state.pswdClass,\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.errorClass(this.state.formErrors.Password) && React.createElement(\"span\", {\n      className: \"formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Password is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character\"))), React.createElement(\"div\", {\n      className: \"form-group row \".concat(this.errorClass(this.state.formErrors.Phone)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label',\n      htmlFor: 'phone',\n      title: 'Phone',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: 'phone',\n      input_type: 'number',\n      name: 'phone',\n      value: this.state.phone,\n      placeholder: \"+91\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.Phone) && React.createElement(\"span\", {\n      className: \"formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Phone must be only in numbers\"))), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: 'col-sm-2 col-form-label pt-0',\n      htmlFor: 'phone',\n      title: 'Gender',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: 'form-check-input',\n      input_type: \"radio\",\n      name: \"gender\",\n      id: \"male\",\n      checked: this.state.gender === 'Male',\n      onChange: this.handleUserInput,\n      value: 'Male',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(Label, {\n      className: 'form-check-label',\n      htmlFor: 'male',\n      title: 'Male',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: 'form-check-input',\n      input_type: \"radio\",\n      name: \"gender\",\n      id: \"female\",\n      checked: this.state.gender === 'Female',\n      onChange: this.handleUserInput,\n      value: 'Female',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(Label, {\n      className: 'form-check-label',\n      htmlFor: 'female',\n      title: 'Female',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), this.errorClass(this.state.formErrors.Gender) && React.createElement(\"span\", {\n      className: \"formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Please select one.\")))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Button, {\n      title: 'Register',\n      action: 'submit',\n      className: \"btn btn-primary\",\n      disabled: this.state.signupValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/login\",\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/signup.components.js"],"names":["React","Input","Button","isLoggedIn","userActions","alertActions","Link","Label","Signup","Component","constructor","props","handleUserInput","e","name","target","value","setState","validateField","register","event","preventDefault","state","fullname","email","password","phone","gender","dispatch","navigator","onLine","error","showHidePassword","document","getElementById","type","pswdClass","pswdType","formErrors","Email","Password","Phone","Fullname","Gender","emailValid","userExists","passwordValid","nameValid","phoneValid","genderValid","signupValid","componentDidMount","window","addEventListener","setTimeout","style","display","componentWillUnmount","console","log","message","fieldName","fieldValidationErrors","match","length","validateForm","errorClass","render","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './generalComponents/input.component'\nimport Button from './generalComponents/button.component'\nimport isLoggedIn from '../isLoggedIn'\nimport { userActions } from '../redux/user/userActions';\nimport { alertActions } from '../redux/alert/alertActions';\nimport { Link } from 'react-router-dom'\nimport Label from './generalComponents/label';\n\nclass Signup extends React.Component {\n  isLoggedIn;\n  constructor(props) {\n    super(props)\n    this.state = {\n      fullname: '',\n      email: '',\n      password: '',\n      phone: '',\n      gender: '',\n      formErrors: { Email: '', Password: '', Phone: '', Fullname: '', Gender: '' },\n      emailValid: false,\n      userExists: '',\n      passwordValid: false,\n      nameValid: false,\n      phoneValid: false,\n      genderValid: false,\n      signupValid: false,\n      pswdType: true,\n      pswdClass: 'fa fa-eye-slash'\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('online', (event) => {\n      this.register(event);\n    })\n\n    setTimeout(() => {\n      document.getElementById('register').style.display = 'none';\n    }, 0)\n  }\n\n  componentWillUnmount() {\n    try {\n      document.getElementById('register').style.display = 'block';\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    let nameValid = this.state.nameValid;\n    let genderValid = this.state.genderValid;\n    let phoneValid = this.state.phoneValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.Email = emailValid ? '' : ' is invalid';\n        break;\n      case 'password':\n        passwordValid = value.length >= 8 && value.match(/^(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n        fieldValidationErrors.Password = passwordValid ? '' : ' is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character';\n        break;\n      case 'fullname':\n        nameValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.Fullname = nameValid ? '' : 'must contain only alphabets'\n        break;\n      case 'phone':\n        phoneValid = value.length === 10 && value.match(/^[0-9]+$/);\n        fieldValidationErrors.Phone = phoneValid ? '' : 'must be only numbers and 10 digits only'\n        break;\n      case 'gender':\n        genderValid = !!this.state.gender;\n        fieldValidationErrors.Gender = genderValid ? '' : 'please select one'\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      genderValid: genderValid,\n      passwordValid: passwordValid,\n      nameValid: nameValid,\n      phoneValid: phoneValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      signupValid: this.state.emailValid && this.state.genderValid && this.state.passwordValid && this.state.nameValid && this.state.phoneValid\n    });\n  }\n\n  errorClass(error) {\n    return (error.length === 0 ? '' : 'has-error');\n  }\n\n  register = (event) => {\n    event.preventDefault();\n    const { fullname, email, password, phone, gender } = this.state;\n    const { dispatch } = this.props\n    if (navigator.onLine) {\n      dispatch(userActions.register(fullname, email, password, phone, gender))\n    } else {\n      dispatch(alertActions.error('Network Down. Form will be auto submitted once online!'))\n    }\n  }\n\n  showHidePassword = (e) => {\n    e.preventDefault();\n    if (document.getElementById('password').type === 'password') {\n      this.setState({\n        pswdClass: 'fa fa-eye',\n        pswdType: !this.state.pswdType\n      })\n    } else {\n      this.setState({\n        pswdClass: 'fa fa-eye-slash',\n        pswdType: !this.state.pswdType\n      })\n    }\n  }\n\n  render() {\n    if (isLoggedIn()) {\n      this.props.history.push('/');\n    }\n    return (\n      <div className=\"col-md-4 col-md-offset-4\">\n        <h1 className=\"underline\">Register</h1>\n        <form onSubmit={this.register} method=\"POST\">\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.Fullname)}`}>\n            <Label\n              className={'col-sm-2 col-form-label'}\n              htmlFor={'fullname'}\n              title={'Fullname'}\n            />\n            <div className='col-sm-10'>\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                input_type={'text'}\n                name={'fullname'}\n                id={'fullname'}\n                value={this.state.fullname}\n                placeholder=\"Enter fullname\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.Fullname) && <span className=\"formErrors\">Name must be only in alphabets</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.Email)}`}>\n            <Label\n              className={'col-sm-2 col-form-label'}\n              htmlFor={'email'}\n              title={'Email'}\n            />\n            <div className=\"col-sm-10\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'email'}\n                input_type={'text'}\n                name={'email'}\n                value={this.state.email}\n                placeholder=\"@\"\n                required\n              />\n              <div><small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small></div>\n              {this.errorClass(this.state.formErrors.Email) && <span className=\"formErrors\">Email should be a valid email address e.g., example@domain.com</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.Password)}`}>\n            <Label\n              className={'col-sm-2 col-form-label'}\n              htmlFor={'password'}\n              title={'Password'}\n            />\n            <div className=\"input-group col-sm-10\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'password'}\n                input_type={this.state.pswdType ? 'password' : 'text'}\n                name={'password'}\n                value={this.state.password}\n                placeholder=\"Password\"\n                required\n              />\n              <div className=\"input-group-addon\" onClick={this.showHidePassword}>\n                <i className={this.state.pswdClass} aria-hidden=\"true\"></i>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-10\">\n              {this.errorClass(this.state.formErrors.Password) && <span className=\"formErrors\">Password is too short and must be of length 8 and must conatain a lowercase an uppercase a number and a special character</span>}\n            </div>\n          </div>\n          <div className={`form-group row ${this.errorClass(this.state.formErrors.Phone)}`}>\n            <Label\n              className={'col-sm-2 col-form-label'}\n              htmlFor={'phone'}\n              title={'Phone'}\n            />\n            <div className=\"col-sm-10\">\n              <Input\n                onChange={this.handleUserInput}\n                className={'form-control'}\n                id={'phone'}\n                input_type={'number'}\n                name={'phone'}\n                value={this.state.phone}\n                placeholder=\"+91\"\n                required\n              />\n              {this.errorClass(this.state.formErrors.Phone) && <span className=\"formErrors\">Phone must be only in numbers</span>}\n            </div>\n          </div>\n          <fieldset className=\"form-group\">\n            <div className=\"row\">\n              <Label\n                className={'col-sm-2 col-form-label pt-0'}\n                htmlFor={'phone'}\n                title={'Gender'}\n              />\n              <div className=\"col-sm-10\">\n                <div className=\"form-check\">\n                  <Input\n                    className={'form-check-input'}\n                    input_type=\"radio\"\n                    name=\"gender\"\n                    id=\"male\"\n                    checked={this.state.gender === 'Male'}\n                    onChange={this.handleUserInput}\n                    value={'Male'}\n                  />\n                  &nbsp;\n                  <Label\n                    className={'form-check-label'}\n                    htmlFor={'male'}\n                    title={'Male'}\n                  />\n                </div>\n                <div className=\"form-check\">\n                  <Input\n                    className={'form-check-input'}\n                    input_type=\"radio\"\n                    name=\"gender\"\n                    id=\"female\"\n                    checked={this.state.gender === 'Female'}\n                    onChange={this.handleUserInput}\n                    value={'Female'}\n                  />\n                  &nbsp;\n                  <Label\n                    className={'form-check-label'}\n                    htmlFor={'female'}\n                    title={'Female'}\n                  />\n                </div>\n                {this.errorClass(this.state.formErrors.Gender) && <span className=\"formErrors\">Please select one.</span>}\n              </div>\n            </div>\n          </fieldset>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-10\">\n              <Button\n                title={'Register'}\n                action={'submit'}\n                className=\"btn btn-primary\"\n                disabled={this.state.signupValid}\n              />\n              <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div >\n    )\n  }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}