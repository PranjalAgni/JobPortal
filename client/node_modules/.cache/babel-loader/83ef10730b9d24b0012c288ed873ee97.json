{"ast":null,"code":"import { profileService } from './profileService';\nimport { profileConstants } from './profileConstants';\nimport { history } from '../../_helpers/history';\nimport { alertActions } from '../alert/alertActions';\nexport const profileActions = {\n  updateProfile,\n  sendMail\n};\n\nfunction updateProfile(id, data, emailId) {\n  return dispatch => {\n    dispatch(request(id));\n    profileService.updateProfile(id, data, emailId).then(data => {\n      dispatch(success(data));\n      history.push('/profile');\n    }).catch(error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: profileConstants.PROFILE_UPDATE_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: profileConstants.PROFILE_UPDATE_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: profileConstants.PROFILE_UPDATE_FAILURE,\n      error\n    };\n  }\n}\n\nfunction sendMail(fullname, email, subject, message) {\n  return dispatch => {\n    dispatch(request(fullname, email, subject, message));\n    profileService.sendMail(fullname, email, subject, message).then(status => {\n      if (status === 'success') {\n        dispatch(alertActions.success('Message Sent.'));\n        dispatch(success(status));\n      } else {\n        dispatch(alertActions.error('Message failed to send.'));\n      }\n    }).catch(error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: profileConstants.SEND_MAIL_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: profileConstants.SEND_MAIL_SUCCESS,\n      status\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: profileConstants.SEND_MAIL_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/redux/profile/profileActions.js"],"names":["profileService","profileConstants","history","alertActions","profileActions","updateProfile","sendMail","id","data","emailId","dispatch","request","then","success","push","catch","error","failure","message","type","PROFILE_UPDATE_REQUEST","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAILURE","fullname","email","subject","status","SEND_MAIL_REQUEST","SEND_MAIL_SUCCESS","SEND_MAIL_FAILURE"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,aAD4B;AAE5BC,EAAAA;AAF4B,CAAvB;;AAKP,SAASD,aAAT,CAAuBE,EAAvB,EAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,OAAO,CAACJ,EAAD,CAAR,CAAR;AACAP,IAAAA,cAAc,CAACK,aAAf,CAA6BE,EAA7B,EAAiCC,IAAjC,EAAuCC,OAAvC,EACGG,IADH,CACSJ,IAAD,IAAU;AACdE,MAAAA,QAAQ,CAACG,OAAO,CAACL,IAAD,CAAR,CAAR;AACAN,MAAAA,OAAO,CAACY,IAAR,CAAa,UAAb;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACE,OAAzB,CAAD,CAAR;AACD,KARH;AASD,GAXD;;AAaA,WAASP,OAAT,GAAmB;AAAE,WAAO;AAAEQ,MAAAA,IAAI,EAAElB,gBAAgB,CAACmB;AAAzB,KAAP;AAA0D;;AAC/E,WAASP,OAAT,CAAiBL,IAAjB,EAAuB;AAAE,WAAO;AAAEW,MAAAA,IAAI,EAAElB,gBAAgB,CAACoB,sBAAzB;AAAiDb,MAAAA;AAAjD,KAAP;AAAgE;;AACzF,WAASS,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAElB,gBAAgB,CAACqB,sBAAzB;AAAiDN,MAAAA;AAAjD,KAAP;AAAiE;AAC5F;;AAED,SAASV,QAAT,CAAkBiB,QAAlB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CP,OAA5C,EAAqD;AACnD,SAAOR,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,OAAO,CAACY,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,EAA2BP,OAA3B,CAAR,CAAR;AACAlB,IAAAA,cAAc,CAACM,QAAf,CAAwBiB,QAAxB,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkDP,OAAlD,EACGN,IADH,CACSc,MAAD,IAAY;AAChB,UAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBhB,QAAAA,QAAQ,CAACP,YAAY,CAACU,OAAb,CAAqB,eAArB,CAAD,CAAR;AACAH,QAAAA,QAAQ,CAACG,OAAO,CAACa,MAAD,CAAR,CAAR;AACD,OAHD,MAGO;AACLhB,QAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmB,yBAAnB,CAAD,CAAR;AACD;AACF,KARH,EASGD,KATH,CASUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAD,CAAR,CAAR;AACAN,MAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACE,OAAzB,CAAD,CAAR;AACD,KAZH;AAaD,GAfD;;AAiBA,WAASP,OAAT,GAAmB;AAAE,WAAO;AAAEQ,MAAAA,IAAI,EAAElB,gBAAgB,CAAC0B;AAAzB,KAAP;AAAqD;;AAC1E,WAASd,OAAT,CAAiBa,MAAjB,EAAyB;AAAE,WAAO;AAAEP,MAAAA,IAAI,EAAElB,gBAAgB,CAAC2B,iBAAzB;AAA4CF,MAAAA;AAA5C,KAAP;AAA6D;;AACxF,WAAST,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEG,MAAAA,IAAI,EAAElB,gBAAgB,CAAC4B,iBAAzB;AAA4Cb,MAAAA;AAA5C,KAAP;AAA4D;AACvF","sourcesContent":["import { profileService } from './profileService'\nimport { profileConstants } from './profileConstants'\nimport { history } from '../../_helpers/history'\nimport { alertActions } from '../alert/alertActions'\n\nexport const profileActions = {\n  updateProfile,\n  sendMail\n};\n\nfunction updateProfile(id, data, emailId) {\n  return dispatch => {\n    dispatch(request(id));\n    profileService.updateProfile(id, data, emailId)\n      .then((data) => {\n        dispatch(success(data));\n        history.push('/profile');\n      })\n      .catch((error) => {\n        dispatch(failure(error));\n        dispatch(alertActions.error(error.message));\n      })\n  };\n\n  function request() { return { type: profileConstants.PROFILE_UPDATE_REQUEST } }\n  function success(data) { return { type: profileConstants.PROFILE_UPDATE_SUCCESS, data } }\n  function failure(error) { return { type: profileConstants.PROFILE_UPDATE_FAILURE, error } }\n}\n\nfunction sendMail(fullname, email, subject, message) {\n  return dispatch => {\n    dispatch(request(fullname, email, subject, message));\n    profileService.sendMail(fullname, email, subject, message)\n      .then((status) => {\n        if (status === 'success') {\n          dispatch(alertActions.success('Message Sent.'));\n          dispatch(success(status));\n        } else {\n          dispatch(alertActions.error('Message failed to send.'))\n        }\n      })\n      .catch((error) => {\n        dispatch(failure(error));\n        dispatch(alertActions.error(error.message));\n      })\n  };\n\n  function request() { return { type: profileConstants.SEND_MAIL_REQUEST } }\n  function success(status) { return { type: profileConstants.SEND_MAIL_SUCCESS, status } }\n  function failure(error) { return { type: profileConstants.SEND_MAIL_FAILURE, error } }\n}"]},"metadata":{},"sourceType":"module"}