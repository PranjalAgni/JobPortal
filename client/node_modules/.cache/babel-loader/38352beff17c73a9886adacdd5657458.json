{"ast":null,"code":"import axios from 'axios';\nexport const jobService = {\n  addJob,\n  editJob,\n  updateJob,\n  applyJob,\n  getAppliedJob,\n  removeJob,\n  updateStatus,\n  getMails\n};\n\nasync function addJob(company, profile, designation, salary, city, data) {\n  return await axios.post('http://localhost:4000/getjobsvalidate', {\n    company,\n    designation\n  }).then(async res => {\n    if (res.data !== 'false') {\n      await axios.post('http://localhost:4000/upload', data).then(async response => {\n        const url = '/' + response.data;\n        const imageURL = url;\n        await axios.post('http://localhost:4000/jobs', {\n          company,\n          profile,\n          designation,\n          salary,\n          city,\n          imageURL\n        }).then(async res => {\n          return res;\n        }).catch(err => {\n          return err;\n        });\n      }).catch(error => {\n        return error;\n      });\n    } else {\n      return true;\n    }\n  }).catch(err => {\n    return err;\n  });\n}\n\nasync function editJob(id) {\n  return await axios.get('http://localhost:4000/'.concat(id)).then(res => {\n    return res.data;\n  }).catch(err => {\n    return err;\n  });\n}\n\nasync function updateJob(id, company, profileType, designation, annualSalary, city) {\n  console.log('hello');\n  return await axios.put('http://localhost:4000/updatejob/'.concat(id), {\n    company,\n    profileType,\n    designation,\n    annualSalary,\n    city\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    return err;\n  });\n}\n\nasync function applyJob(id, name, gender) {\n  console.log(id, name);\n  return await axios.post('http://localhost:4000/apply', {\n    id,\n    name,\n    gender\n  }).then(async res => {\n    await axios.get('http://localhost:4000/appliedjobs').then(res => {\n      localStorage.setItem('appliedjobs', JSON.stringify(res.data));\n      const filteredData = res.data.filter(item => {\n        if (item.jobDetails.company === name) {\n          return true;\n        }\n\n        return false;\n      });\n      return filteredData;\n    }).catch(error => {\n      console.log(error.message);\n    });\n\n    if (res.data.title === 'Successful') {\n      return res.data.title;\n    } else {\n      const error = res.data.errors[0];\n      return error.errorMessage;\n    }\n  }).catch(err => {\n    return err;\n  });\n}\n\nasync function getAppliedJob(name) {\n  return await axios.get('http://localhost:4000/appliedjobs').then(res => {\n    localStorage.setItem('appliedjobs', JSON.stringify(res.data));\n    const filteredData = res.data.filter(item => {\n      if (item.jobDetails.company === name) {\n        return true;\n      }\n\n      if (item.userDetails.name === name) {\n        return true;\n      }\n\n      return false;\n    });\n    localStorage.setItem('appliedjobs', JSON.stringify(filteredData));\n    return filteredData;\n  }).catch(error => {\n    console.log(error.message);\n  });\n}\n\nasync function removeJob(id) {\n  return await axios.post('http://localhost:4000/deletejob/'.concat(id)).then(res => {\n    return res.data;\n  }).catch(error => {\n    return error;\n  });\n}\n\nasync function updateStatus(id, status) {\n  return await axios.put('http://localhost:4000/updatejobstatus', {\n    id,\n    status\n  }).then(async res => {\n    const job = JSON.parse(res.data.data);\n    const statusResponse = res.data.statusResponse;\n    const mailDetails = {\n      jobId: job._id,\n      status: statusResponse,\n      name: job.userDetails.name,\n      designation: job.jobDetails.designation,\n      company: job.jobDetails.company,\n      city: job.jobDetails.city,\n      date: randomDate(new Date(2019, 7, 1), new Date())\n    };\n    return await axios.post('http://localhost:4000/maildetails', {\n      mailDetails\n    }).then(async res => {\n      return res;\n    }).catch(error => {\n      return error.message;\n    });\n  }).catch(error => {\n    return error;\n  });\n\n  function randomDate(start, end) {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toString();\n  }\n}\n\nasync function getMails() {\n  return await axios.get('http://localhost:4000/mails').then(mails => {\n    localStorage.setItem('mails', JSON.stringify(mails.data));\n    const mailData = JSON.parse(localStorage.getItem('mails'));\n    return mailData;\n  }).catch(error => {\n    return error.message;\n  });\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/redux/addJob/jobService.js"],"names":["axios","jobService","addJob","editJob","updateJob","applyJob","getAppliedJob","removeJob","updateStatus","getMails","company","profile","designation","salary","city","data","post","then","res","response","url","imageURL","catch","err","error","id","get","concat","profileType","annualSalary","console","log","put","name","gender","localStorage","setItem","JSON","stringify","filteredData","filter","item","jobDetails","message","title","errors","errorMessage","userDetails","status","job","parse","statusResponse","mailDetails","jobId","_id","date","randomDate","Date","start","end","getTime","Math","random","toString","mails","mailData","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const jobService = {\n  addJob,\n  editJob,\n  updateJob,\n  applyJob,\n  getAppliedJob,\n  removeJob,\n  updateStatus,\n  getMails\n};\n\nasync function addJob(company, profile, designation, salary, city, data) {\n  return await axios.post('http://localhost:4000/getjobsvalidate', { company, designation })\n    .then(async (res) => {\n      if (res.data !== 'false') {\n        await axios.post('http://localhost:4000/upload', data)\n          .then(async (response) => {\n            const url = '/' + response.data\n            const imageURL = url\n            await axios.post('http://localhost:4000/jobs', { company, profile, designation, salary, city, imageURL })\n              .then(async (res) => {\n                return res;\n              })\n              .catch((err) => {\n                return err;\n              });\n          })\n          .catch((error) => {\n            return error;\n          });\n      } else {\n        return true;\n      }\n\n    })\n    .catch((err) => {\n      return err\n    })\n}\n\nasync function editJob(id) {\n  return await axios.get('http://localhost:4000/'.concat(id))\n    .then((res) => {\n      return res.data\n    })\n    .catch((err) => {\n      return err\n    })\n}\n\nasync function updateJob(id, company, profileType, designation, annualSalary, city) {\n  console.log('hello')\n  return await axios.put('http://localhost:4000/updatejob/'.concat(id), { company, profileType, designation, annualSalary, city })\n    .then((res) => {\n      return res\n    })\n    .catch((err) => {\n      return err\n    })\n}\n\nasync function applyJob(id, name, gender) {\n  console.log(id, name)\n  return await axios.post('http://localhost:4000/apply', { id, name, gender })\n    .then(async (res) => {\n      await axios.get('http://localhost:4000/appliedjobs')\n        .then((res) => {\n          localStorage.setItem('appliedjobs', JSON.stringify(res.data))\n          const filteredData = res.data.filter((item) => {\n            if (item.jobDetails.company === name) {\n              return true;\n            }\n            return false;\n          })\n          return filteredData;\n        })\n        .catch((error) => {\n          console.log(error.message)\n        })\n      if (res.data.title === 'Successful') {\n        return res.data.title;\n      } else {\n        const error = res.data.errors[0]\n        return error.errorMessage\n      }\n    })\n    .catch((err) => {\n      return err\n    })\n}\n\nasync function getAppliedJob(name) {\n  return await axios.get('http://localhost:4000/appliedjobs')\n    .then((res) => {\n      localStorage.setItem('appliedjobs', JSON.stringify(res.data))\n      const filteredData = res.data.filter((item) => {\n        if (item.jobDetails.company === name) {\n          return true;\n        }\n\n        if (item.userDetails.name === name) {\n          return true;\n        }\n        return false;\n      })\n      localStorage.setItem('appliedjobs', JSON.stringify(filteredData))\n      return filteredData;\n    })\n    .catch((error) => {\n      console.log(error.message)\n    })\n}\n\nasync function removeJob(id) {\n  return await axios.post('http://localhost:4000/deletejob/'.concat(id))\n    .then((res) => {\n      return res.data\n    })\n    .catch((error) => {\n      return error\n    })\n}\n\nasync function updateStatus(id, status) {\n  return await axios.put('http://localhost:4000/updatejobstatus', { id, status })\n    .then(async (res) => {\n      const job = JSON.parse(res.data.data);\n      const statusResponse = res.data.statusResponse;\n      const mailDetails = {\n        jobId: job._id,\n        status: statusResponse,\n        name: job.userDetails.name,\n        designation: job.jobDetails.designation,\n        company: job.jobDetails.company,\n        city: job.jobDetails.city,\n        date: randomDate(new Date(2019, 7, 1), new Date())\n      }\n      return await axios.post('http://localhost:4000/maildetails', { mailDetails })\n        .then(async (res) => {\n          return res;\n        })\n        .catch((error) => {\n          return error.message;\n        })\n    })\n    .catch((error) => {\n      return error\n    })\n  function randomDate(start, end) {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toString();\n  }\n}\n\nasync function getMails() {\n  return await axios.get('http://localhost:4000/mails')\n    .then((mails) => {\n      localStorage.setItem('mails', JSON.stringify(mails.data));\n      const mailData = JSON.parse(localStorage.getItem('mails'));\n      return mailData;\n    })\n    .catch((error) => {\n      return error.message;\n    })\n}"]},"metadata":{},"sourceType":"module"}