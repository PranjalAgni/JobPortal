{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/chat/ChatInput.js\";\nimport React from 'react'; // This component is where the user can type their message and send it\n// to the chat room. We shouldn't communicate with the server here though.\n\nclass ChatInput extends React.Component {\n  constructor(props) {\n    super(props); // Set initial state of the chatInput so that it is not undefined\n\n    this.textChangeHandler = event => {\n      this.setState({\n        chatInput: event.target.value\n      }, () => {\n        document.getElementById('message').addEventListener('keypress', event => {\n          this.props.onSend(true);\n        });\n      });\n    };\n\n    this.submitHandler = event => {\n      // Stop the form from refreshing the page on submit\n      event.preventDefault(); // Call the onSend callback with the chatInput message\n\n      this.props.onSend(this.state.chatInput); // Clear the input box\n\n      this.setState({\n        chatInput: ''\n      });\n    };\n\n    this.state = {\n      chatInput: ''\n    }; // React ES6 does not bind 'this' to event handlers by default\n    // this.submitHandler = this.submitHandler.bind(this);\n    // this.textChangeHandler = this.textChangeHandler.bind(this);\n  }\n\n  render() {\n    // Display a user input form and do something when it is submitted\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-inline chat-input\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"message\",\n      type: \"text\",\n      className: \"form-control\",\n      onChange: this.textChangeHandler,\n      value: this.state.chatInput,\n      placeholder: \"Type a message\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nChatInput.defaultProps = {};\nexport default ChatInput;","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/chat/ChatInput.js"],"names":["React","ChatInput","Component","constructor","props","textChangeHandler","event","setState","chatInput","target","value","document","getElementById","addEventListener","onSend","submitHandler","preventDefault","state","render","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SASnBC,iBATmB,GASEC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA1B,OAAd,EAAgD,MAAM;AACpDC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,UAApD,EAAiEP,KAAD,IAAW;AACzE,eAAKF,KAAL,CAAWU,MAAX,CAAkB,IAAlB;AACD,SAFD;AAGD,OAJD;AAKD,KAfkB;;AAAA,SAiBnBC,aAjBmB,GAiBFT,KAAD,IAAW;AACzB;AACAA,MAAAA,KAAK,CAACU,cAAN,GAFyB,CAGzB;;AACA,WAAKZ,KAAL,CAAWU,MAAX,CAAkB,KAAKG,KAAL,CAAWT,SAA7B,EAJyB,CAKzB;;AACA,WAAKD,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAxBkB;;AAGjB,SAAKS,KAAL,GAAa;AAAET,MAAAA,SAAS,EAAE;AAAb,KAAb,CAHiB,CAIjB;AACA;AACA;AACD;;AAoBDU,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,QAAQ,EAAE,KAAKH,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,QAAQ,EAAE,KAAKV,iBAJjB;AAKE,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWT,SALpB;AAME,MAAA,WAAW,EAAC,gBANd;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAcD;;AA5CqC;;AA+CxCP,SAAS,CAACkB,YAAV,GAAyB,EAAzB;AAGA,eAAelB,SAAf","sourcesContent":["import React from 'react';\n// This component is where the user can type their message and send it\n// to the chat room. We shouldn't communicate with the server here though.\nclass ChatInput extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set initial state of the chatInput so that it is not undefined\n    this.state = { chatInput: '' };\n    // React ES6 does not bind 'this' to event handlers by default\n    // this.submitHandler = this.submitHandler.bind(this);\n    // this.textChangeHandler = this.textChangeHandler.bind(this);\n  }\n\n  textChangeHandler = (event) => {\n    this.setState({ chatInput: event.target.value}, () => {\n      document.getElementById('message').addEventListener('keypress', (event) => {\n        this.props.onSend(true);\n      })\n    });\n  }\n\n  submitHandler = (event) => {\n    // Stop the form from refreshing the page on submit\n    event.preventDefault();\n    // Call the onSend callback with the chatInput message\n    this.props.onSend(this.state.chatInput);\n    // Clear the input box\n    this.setState({ chatInput: '' });\n  }\n\n\n  render() {\n    // Display a user input form and do something when it is submitted\n    return (\n      <div>\n        <form className=\"form-inline chat-input\" onSubmit={this.submitHandler}>\n          <input \n            id=\"message\" \n            type=\"text\"\n            className=\"form-control\"\n            onChange={this.textChangeHandler}\n            value={this.state.chatInput}\n            placeholder=\"Type a message\"\n            required />\n        </form>\n      </div>\n    );\n  }\n}\n\nChatInput.defaultProps = {\n};\n\nexport default ChatInput;\n"]},"metadata":{},"sourceType":"module"}