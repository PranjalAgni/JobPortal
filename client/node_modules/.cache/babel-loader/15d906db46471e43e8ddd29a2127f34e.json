{"ast":null,"code":"var _jsxFileName = \"/home/user/Navigation-and-api-integration/client/src/components/updateJobs.js\";\nimport React from 'react';\nimport Input from './generalComponents/input.component';\nimport Button from './generalComponents/button.component';\nimport { jobAction } from '../redux/addJob/jobActions';\n\nclass UpdateJobForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editjob = JSON.parse(localStorage.getItem('editjob'));\n    this.user = JSON.parse(localStorage.getItem('currentUser'));\n\n    this.handleUserInput = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.updateJob = event => {\n      event.preventDefault();\n      const id = this.state.id;\n      const _this$state = this.state,\n            company = _this$state.company,\n            designation = _this$state.designation,\n            city = _this$state.city;\n      const profileType = this.state.profile;\n      const annualSalary = this.state.salary;\n      const dispatch = this.props.dispatch;\n\n      if (company && profileType && designation && annualSalary && city) {\n        dispatch(jobAction.updateJob(id, company, profileType, designation, annualSalary, city));\n      }\n    };\n\n    this.state = {\n      id: '',\n      profile: '',\n      designation: '',\n      salary: '',\n      city: '',\n      formErrors: {\n        profile: '',\n        designation: '',\n        salary: '',\n        city: ''\n      },\n      profileValid: true,\n      designationValid: true,\n      salaryValid: true,\n      cityValid: true,\n      addJobValid: true\n    };\n  }\n\n  componentDidMount() {\n    const editjobs = this.props.editjobs;\n    console.log(editjobs);\n    const profileType = editjobs.profileType,\n          company = editjobs.company,\n          designation = editjobs.designation,\n          annualSalary = editjobs.annualSalary,\n          city = editjobs.city,\n          _id = editjobs._id;\n    this.setState({\n      profile: profileType,\n      company: company,\n      designation: designation,\n      salary: annualSalary,\n      city: city,\n      id: _id\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let profileValid = this.state.profileValid;\n    let designationValid = this.state.designationValid;\n    let salaryValid = this.state.salaryValid;\n    let cityValid = this.state.cityValid;\n\n    switch (fieldName) {\n      case 'profile':\n        profileValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.profile = profileValid ? '' : ' is invalid';\n        break;\n\n      case 'designation':\n        designationValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.designation = designationValid ? '' : ' is invalid';\n        break;\n\n      case 'salary':\n        salaryValid = value.match(/^[0-9]+( [a-zA-Z]+)*$/);\n        fieldValidationErrors.salary = salaryValid ? '' : 'must be valid';\n        break;\n\n      case 'city':\n        cityValid = value.match(/^[a-z][^!¡?÷?¿\\\\+=@#$%ˆ&*{}|~<>;:[\\]]{5,}$/i);\n        fieldValidationErrors.city = cityValid ? '' : 'can be a comb. of a-zA-Z0-9.,-_()';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      profileValid: profileValid,\n      designationValid: designationValid,\n      salaryValid: salaryValid,\n      cityValid: cityValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      addJobValid: this.state.profileValid && this.state.designationValid && this.state.salaryValid && this.state.cityValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    if (this.user.role === 2) {\n      this.props.history.push('/');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Update Job\"), React.createElement(\"form\", {\n      onSubmit: this.updateJob,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.profile)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Input, {\n      title: 'Profile',\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: this.state.profile,\n      input_type: 'text',\n      name: 'profile',\n      value: this.state.profile,\n      placeholder: \"IT Services/Sales/Tester\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.profile) && React.createElement(\"span\", {\n      className: \"nameright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Profile name must be valid\")), React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.designation)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Input, {\n      title: 'Designation',\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: this.state.designation,\n      input_type: 'text',\n      name: 'designation',\n      value: this.state.designation,\n      placeholder: \"Software Engineer\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.designation) && React.createElement(\"span\", {\n      className: \"emailright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Invalid designation\")), React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.salary)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Input, {\n      title: 'Salary',\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: this.state.salary,\n      input_type: 'text',\n      name: 'salary',\n      value: this.state.salary,\n      placeholder: \"7 LPA\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.salary) && React.createElement(\"span\", {\n      className: \"pswderrright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Invalid Salary\")), React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.city)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Input, {\n      title: 'City',\n      onChange: this.handleUserInput,\n      className: 'form-control',\n      id: this.state.city,\n      input_type: 'text',\n      name: 'city',\n      value: this.state.city,\n      placeholder: \"Delhi\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.errorClass(this.state.formErrors.city) && React.createElement(\"span\", {\n      className: \"phoneright formErrors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"City name must be only in a-zA-Z_-0-9()\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      title: 'Add',\n      action: 'submit',\n      className: \"btn btn-success\",\n      disabled: this.state.addJobValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UpdateJobForm;","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/components/updateJobs.js"],"names":["React","Input","Button","jobAction","UpdateJobForm","Component","constructor","props","editjob","JSON","parse","localStorage","getItem","user","handleUserInput","event","name","target","value","setState","validateField","updateJob","preventDefault","id","state","company","designation","city","profileType","profile","annualSalary","salary","dispatch","formErrors","profileValid","designationValid","salaryValid","cityValid","addJobValid","componentDidMount","editjobs","console","log","_id","fieldName","fieldValidationErrors","match","validateForm","errorClass","error","length","render","role","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './generalComponents/input.component'\nimport Button from './generalComponents/button.component'\nimport { jobAction } from '../redux/addJob/jobActions';\n\nclass UpdateJobForm extends React.Component {\n  editjob = JSON.parse(localStorage.getItem('editjob'))\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: '',\n      profile: '',\n      designation: '',\n      salary: '',\n      city: '',\n      formErrors: { profile: '', designation: '', salary: '', city: '' },\n      profileValid: true,\n      designationValid: true,\n      salaryValid: true,\n      cityValid: true,\n      addJobValid: true,\n    }\n  }\n\n  componentDidMount(){\n    const {editjobs} = this.props\n    console.log(editjobs)\n      const { profileType, company, designation, annualSalary, city, _id } = editjobs\n    this.setState({\n      profile: profileType,\n      company: company,\n      designation: designation,\n      salary: annualSalary,\n      city: city,\n      id: _id\n    })\n  }\n\n  handleUserInput = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let profileValid = this.state.profileValid;\n    let designationValid = this.state.designationValid;\n    let salaryValid = this.state.salaryValid;\n    let cityValid = this.state.cityValid;\n\n    switch (fieldName) {\n      case 'profile':\n        profileValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.profile = profileValid ? '' : ' is invalid';\n        break;\n      case 'designation':\n        designationValid = value.match(/^[a-z][^0-9!¡?÷?¿/\\\\+=@#$%ˆ&*(){}|~<>;:[\\]]{2,}$/i);\n        fieldValidationErrors.designation = designationValid ? '' : ' is invalid';\n        break;\n      case 'salary':\n        salaryValid = value.match(/^[0-9]+( [a-zA-Z]+)*$/);\n        fieldValidationErrors.salary = salaryValid ? '' : 'must be valid'\n        break;\n      case 'city':\n        cityValid = value.match(/^[a-z][^!¡?÷?¿\\\\+=@#$%ˆ&*{}|~<>;:[\\]]{5,}$/i);\n        fieldValidationErrors.city = cityValid ? '' : 'can be a comb. of a-zA-Z0-9.,-_()'\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      profileValid: profileValid,\n      designationValid: designationValid,\n      salaryValid: salaryValid,\n      cityValid: cityValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      addJobValid: this.state.profileValid && this.state.designationValid && this.state.salaryValid && this.state.cityValid\n    });\n  }\n\n  errorClass(error) {\n    return (error.length === 0 ? '' : 'has-error');\n  }\n\n  updateJob = (event) => {\n    event.preventDefault();\n    const id = this.state.id;\n    const { company, designation, city } = this.state;\n    const profileType = this.state.profile;\n    const annualSalary = this.state.salary;\n    const { dispatch } = this.props;\n    if (company && profileType && designation && annualSalary && city) {\n      dispatch(jobAction.updateJob(id, company, profileType, designation, annualSalary, city));\n    }\n  }\n\n  render() {\n    if (this.user.role === 2) {\n      this.props.history.push('/')\n    }\n    return (\n      <div className=\"col-md-4 col-md-offset-4\">\n        <h1 className=\"underline\">Update Job</h1>\n        <form onSubmit={this.updateJob} method=\"POST\">\n          <div className={`form-group ${this.errorClass(this.state.formErrors.profile)}`}>\n            <Input\n              title={'Profile'}\n              onChange={this.handleUserInput}\n              className={'form-control'}\n              id={this.state.profile}\n              input_type={'text'}\n              name={'profile'}\n              value={this.state.profile}\n              placeholder=\"IT Services/Sales/Tester\"\n              required\n            />\n            {this.errorClass(this.state.formErrors.profile) && <span className=\"nameright formErrors\">Profile name must be valid</span>}\n          </div>\n          <div className={`form-group ${this.errorClass(this.state.formErrors.designation)}`}>\n            <Input\n              title={'Designation'}\n              onChange={this.handleUserInput}\n              className={'form-control'}\n              id={this.state.designation}\n              input_type={'text'}\n              name={'designation'}\n              value={this.state.designation}\n              placeholder=\"Software Engineer\"\n              required\n            />\n            {this.errorClass(this.state.formErrors.designation) && <span className=\"emailright formErrors\">Invalid designation</span>}\n          </div>\n          <div className={`form-group ${this.errorClass(this.state.formErrors.salary)}`}>\n            <Input\n              title={'Salary'}\n              onChange={this.handleUserInput}\n              className={'form-control'}\n              id={this.state.salary}\n              input_type={'text'}\n              name={'salary'}\n              value={this.state.salary}\n              placeholder=\"7 LPA\"\n              required\n            />\n            {this.errorClass(this.state.formErrors.salary) && <span className=\"pswderrright formErrors\">Invalid Salary</span>}\n          </div>\n          <div className={`form-group ${this.errorClass(this.state.formErrors.city)}`}>\n            <Input\n              title={'City'}\n              onChange={this.handleUserInput}\n              className={'form-control'}\n              id={this.state.city}\n              input_type={'text'}\n              name={'city'}\n              value={this.state.city}\n              placeholder=\"Delhi\"\n              required\n            />\n            {this.errorClass(this.state.formErrors.city) && <span className=\"phoneright formErrors\">City name must be only in a-zA-Z_-0-9()</span>}\n          </div>\n          <div className=\"form-group\">\n            <Button\n              title={'Add'}\n              action={'submit'}\n              className=\"btn btn-success\"\n              disabled={this.state.addJobValid}\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default UpdateJobForm;"]},"metadata":{},"sourceType":"module"}