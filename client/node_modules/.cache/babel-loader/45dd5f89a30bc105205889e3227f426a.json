{"ast":null,"code":"import axios from 'axios';\nexport const bodyService = {\n  getJobs\n};\n\nasync function getJobs(page, last) {\n  return await axios.get('http://localhost:4000/jobs', {\n    params: {\n      page: page,\n      last: last\n    }\n  }).then(async jobs => {\n    console.log(jobs.data);\n    await axios.get('http://localhost:4000/appliedjobs').then(resp => {\n      localStorage.setItem('appliedjobs', JSON.stringify(resp.data));\n    }).catch(error => {\n      console.log(error.message);\n    });\n    const isJobs = jobs.data;\n\n    if (isJobs !== null) {\n      return jobs.data;\n    } else {\n      return false;\n    }\n  });\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/redux/body/bodyService.js"],"names":["axios","bodyService","getJobs","page","last","get","params","then","jobs","console","log","data","resp","localStorage","setItem","JSON","stringify","catch","error","message","isJobs"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA;AADyB,CAApB;;AAIP,eAAeA,OAAf,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACjC,SAAO,MAAMJ,KAAK,CAACK,GAAN,CAAU,4BAAV,EAAwC;AACnDC,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EAAEA,IADA;AAENC,MAAAA,IAAI,EAAEA;AAFA;AAD2C,GAAxC,EAMVG,IANU,CAML,MAAMC,IAAN,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,UAAMX,KAAK,CAACK,GAAN,CAAU,mCAAV,EACHE,IADG,CACGK,IAAD,IAAU;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,IAAI,CAACD,IAApB,CAApC;AACD,KAHG,EAIHM,KAJG,CAIIC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,OAAlB;AACD,KANG,CAAN;AAOA,UAAMC,MAAM,GAAGZ,IAAI,CAACG,IAApB;;AACA,QAAIS,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOZ,IAAI,CAACG,IAAZ;AACD,KAFD,MAGK;AACH,aAAO,KAAP;AACD;AACF,GAtBU,CAAb;AAuBD","sourcesContent":["import axios from 'axios'\n\nexport const bodyService = {\n  getJobs\n};\n\nasync function getJobs(page, last) {\n  return await axios.get('http://localhost:4000/jobs', {\n    params: {\n      page: page,\n      last: last\n    }\n  })\n    .then(async jobs => {\n      console.log(jobs.data)\n      await axios.get('http://localhost:4000/appliedjobs')\n        .then((resp) => {\n          localStorage.setItem('appliedjobs', JSON.stringify(resp.data))\n        })\n        .catch((error) => {\n          console.log(error.message)\n        })\n      const isJobs = jobs.data\n      if (isJobs !== null) {\n        return jobs.data;\n      }\n      else {\n        return false;\n      }\n    });\n}"]},"metadata":{},"sourceType":"module"}