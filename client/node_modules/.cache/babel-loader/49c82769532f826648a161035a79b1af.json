{"ast":null,"code":"import axios from 'axios';\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAllUsers,\n  editUser,\n  deleteUser,\n  banUser\n};\n\nasync function login(email, password) {\n  password = btoa(password);\n  return await axios.post('http://localhost:4000/authenticate', {\n    email,\n    password\n  }).then(user => {\n    const isLoggedIn = user.data.status;\n\n    if (isLoggedIn === true) {\n      // store user details in local storage to keep user logged in between page refreshes\n      localStorage.setItem('currentUser', JSON.stringify(user.data.data));\n      return user.data.data;\n    } else {\n      return isLoggedIn;\n    }\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  return true;\n}\n\nasync function register(fullname, email, password, phone, gender) {\n  return await axios.post('http://localhost:4000/register', {\n    fullname,\n    email,\n    password,\n    phone,\n    gender\n  }).then(res => {\n    console.log(res.data);\n    const isSignup = res.data.isSignup;\n\n    if (isSignup === true) {\n      return res.data;\n    } else {\n      return 'User exists';\n    }\n  }).catch(err => {\n    console.log(err.message);\n  });\n}\n\nasync function getAllUsers() {\n  return await axios.get('http://localhost:4000/users').then(res => {\n    return res.data.reverse();\n  }).catch(err => {\n    console.log(err.message);\n  });\n}\n\nasync function editUser(name, emailId, password, phone, _id) {\n  return await axios.put('http://localhost:4000/updateuser/'.concat(_id), {\n    name,\n    emailId,\n    password,\n    phone\n  }).then(res => {\n    if (res.data.status === true) {\n      return true;\n    }\n  }).catch(err => {\n    console.log(err.message);\n  });\n}\n\nasync function deleteUser(_id) {\n  return await axios.delete('http://localhost:4000/deleteuser/'.concat(_id)).then(res => {\n    if (res.data.status === true) {\n      return true;\n    }\n  }).catch(err => {\n    console.log(err.message);\n  });\n}\n\nasync function banUser(_id, userStatus) {\n  return await axios.put('http://localhost:4000/updateuser/'.concat(_id), {\n    userStatus\n  }).then(res => {\n    return res.data.status;\n  }).catch(err => {\n    console.log(err.message);\n  });\n}","map":{"version":3,"sources":["/home/user/Navigation-and-api-integration/client/src/redux/user/userServices.js"],"names":["axios","userService","login","logout","register","getAllUsers","editUser","deleteUser","banUser","email","password","btoa","post","then","user","isLoggedIn","data","status","localStorage","setItem","JSON","stringify","removeItem","fullname","phone","gender","res","console","log","isSignup","catch","err","message","get","reverse","name","emailId","_id","put","concat","delete","userStatus"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAllUsers,\n  editUser,\n  deleteUser,\n  banUser,\n};\n\nasync function login(email, password) {\n  password = btoa(password)\n  return await axios.post('http://localhost:4000/authenticate', { email, password })\n    .then(user => {\n      const isLoggedIn = user.data.status\n      if (isLoggedIn === true) {\n        // store user details in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user.data.data));\n        return user.data.data;\n      }\n      else {\n        return isLoggedIn;\n      }\n    });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  return true;\n}\n\nasync function register(fullname, email, password, phone, gender) {\n  return await axios.post('http://localhost:4000/register', {fullname, email, password, phone, gender})\n      .then((res) => {\n        console.log(res.data)\n        const isSignup = res.data.isSignup;\n        if(isSignup === true) {\n          return res.data\n        } else {\n          return 'User exists'\n        }\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n}\n\nasync function getAllUsers() {\n  return await axios.get('http://localhost:4000/users')\n      .then((res) => {\n        return res.data.reverse();\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n}\n\nasync function editUser(name, emailId, password, phone, _id) {\n  return await axios.put('http://localhost:4000/updateuser/'.concat(_id), {name, emailId, password, phone})\n      .then((res) => {\n        if (res.data.status === true) {\n          return true;\n        }\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n}\n\nasync function deleteUser(_id) {\n  return await axios.delete('http://localhost:4000/deleteuser/'.concat(_id))\n      .then((res) => {\n        if (res.data.status === true) {\n          return true;\n        }\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n}\n\nasync function banUser(_id, userStatus) {\n  return await axios.put('http://localhost:4000/updateuser/'.concat(_id), {userStatus})\n      .then((res) => {\n        return res.data.status;\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n}\n"]},"metadata":{},"sourceType":"module"}